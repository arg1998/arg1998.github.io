{"pageProps":{"postData":{"slug":"markdown-test","fancyTitle":"Testing React Markdown with Plugins","imageUri":"/blog/colorful-image.jpg","imageAlt":"","date":1740444938003,"active":true,"excerpt":"","tags":[]},"markdownContent":"# A demo of `react-markdown`\r\n\r\n`react-markdown` is a markdown component for React.\r\n\r\nüëâ Changes are re-rendered as you type.\r\n\r\nüëà Try writing some markdown on the left.\r\n\r\n## Overview\r\n\r\n[Back to Blog](/blog)\r\n\r\n* Follows [CommonMark](https://commonmark.org)\r\n* Optionally follows [GitHub Flavored Markdown](https://github.github.com/gfm/)\r\n* Renders actual React elements instead of using `dangerouslySetInnerHTML`\r\n* Lets you define your own components (to render `MyHeading` instead of `'h1'`)\r\n* Has a lot of plugins\r\n\r\n## Contents\r\n\r\nHere is an example of a plugin in action\r\n([`remark-toc`](https://github.com/remarkjs/remark-toc)).\r\n**This section is replaced by an actual table of contents**.\r\n\r\n## Math \r\nThis is an inline equation: $E = mc^2$\r\n\r\nThis is a block equation:\r\n\r\n$$\r\n\\int_0^1 x^2 \\,dx = \\frac{1}{3}\r\n$$\r\n\r\n## Syntax highlighting\r\n\r\nHere is an example of a plugin to highlight code:\r\n[`rehype-starry-night`](https://github.com/rehypejs/rehype-starry-night).\r\n\r\n```js\r\nimport React from 'react'\r\nimport ReactDom from 'react-dom'\r\nimport {MarkdownHooks} from 'react-markdown'\r\nimport rehypeStarryNight from 'rehype-starry-night'\r\n\r\nconst markdown = `\r\n# Your markdown here\r\n`\r\n\r\nReactDom.render(\r\n  <MarkdownHooks rehypePlugins={[rehypeStarryNight]}>{markdown}</MarkdownHooks>,\r\n  document.querySelector('#content')\r\n)\r\n```\r\n\r\nPretty neat, eh?\r\n\r\n## GitHub flavored markdown (GFM)\r\n\r\nFor GFM, you can *also* use a plugin:\r\n[`remark-gfm`](https://github.com/remarkjs/react-markdown#use).\r\nIt adds support for GitHub-specific extensions to the language:\r\ntables, strikethrough, tasklists, and literal URLs.\r\n\r\nThese features **do not work by default**.\r\nüëÜ Use the toggle above to add the plugin.\r\n\r\n| Feature    | Support              |\r\n| ---------: | :------------------- |\r\n| CommonMark | 100%                 |\r\n| GFM        | 100% w/ `remark-gfm` |\r\n\r\n~~strikethrough~~\r\n\r\n* [ ] task list\r\n* [x] checked item\r\n\r\nhttps://example.com\r\n\r\n## HTML in markdown\r\n\r\n‚ö†Ô∏è HTML in markdown is quite unsafe, but if you want to support it, you can\r\nuse [`rehype-raw`](https://github.com/rehypejs/rehype-raw).\r\nYou should probably combine it with\r\n[`rehype-sanitize`](https://github.com/rehypejs/rehype-sanitize).\r\n\r\n<blockquote>\r\n  üëÜ Use the toggle above to add the plugin.\r\n</blockquote>\r\n\r\n## Components\r\n\r\nYou can pass components to change things:\r\n\r\n```js\r\nimport React from 'react'\r\nimport ReactDom from 'react-dom'\r\nimport Markdown from 'react-markdown'\r\nimport MyFancyRule from './components/my-fancy-rule.js'\r\n\r\nconst markdown = `\r\n# Your markdown here\r\n`\r\n\r\nReactDom.render(\r\n  <Markdown\r\n    components={{\r\n      // Use h2s instead of h1s\r\n      h1: 'h2',\r\n      // Use a component instead of hrs\r\n      hr(props) {\r\n        const {node, ...rest} = props\r\n        return <MyFancyRule {...rest} />\r\n      }\r\n    }}\r\n  >\r\n    {markdown}\r\n  </Markdown>,\r\n  document.querySelector('#content')\r\n)\r\n```\r\n\r\n## More info?\r\n\r\nMuch more info is available in the\r\n[readme on GitHub](https://github.com/remarkjs/react-markdown)!\r\n\r\n***\r\n\r\nA component by [Espen Hovlandsdal](https://espen.codes/)"},"__N_SSG":true}